Please answer the below core-java Questions:

What is programing language?
A. Programming language is a computer language made to
understand commands and execute accordingly. simply it
is a language made to translate commands from human to computer.

What jdk contains or composed of and define each components?
A. jdk is composed of the following:

1 -Java Compiler = The javac tool (javac command) reads
    class and interface definitions, Compiles them into bytecode class files.

2 - Java Interpreter = Is used to interpret the .class Java
    files that have been compiled by Java compiler (javac).
    Java interpreter is accessed using java command.
    The java command starts a Java application.

3 - Java Disassembler: The javap command disassembles one or more class files.
    depending on the options used. The javap prints its output to stdout.

4 - Java Header File Generator = (javah command-line tool) Generates C header
    and source files that are needed to implement native methods.
    The generated header and source files are used by C programs to
    reference an object's instance variables from native source code.

5 - Java Documentation = The javadoc tool comes as part of Java Development
    Kit that parses the declarations and documentation comments in a set of
    Java source files and produces a corresponding set of HTML pages describing
    the public and protected classes, nested classes (but not anonymous inner classes),
    interfaces, constructors, methods, and fields.

6 - Java Debugger = JDB is a simple command-line debugger for Java classes.
    It is a visual demonstration of the Java Debugger that
    provides inspection and debugging of a Java Machine.

7 - Java Applet Viewer = Applet viewer command connects to the
    documents or resources designated by urls and displays each
    applet referenced by the documents in its own window. Used to view java applets.

What is IDE?
A. Integrated Development Environment is a software that contains the necessary tools
used to write code, test, and develop software. Usually containing
Text Editors, Code Libraries, Test Platforms, and Compilers.

What are the IDEs available in the market to support java?
A. Some of the IDE's available to use are:
Eclipse, Intellij Idea, NetBeans, AndroidStudio, BlueJ, jEdit, jGRASP, JSource, JDeveloper.

Explain the entire java life cycle.
A. Create Java text file (.java). Compile (.java) text file using the Java compiler
which result in a (.class) file being created The (.class) file contains the bytecodes.
The file is then loaded into memory by the class loader. The bytecode verifier confirms
that the bytecodes are valid and not hostile. Finally, JVM reads the bytecodes in memory and
translates them into machine code.

what is class?
A. Class is blueprint of objects and methods.

What is object?
A. Object is a instance or a member of a class.

What is the entry point of an application?
A. Main method is the entry point of an application.

Why main is static?
A. Main method is the entry point for JVM to execute the code.
for static method we do not need to create object for that main is static.

Which class is the superclass of all classes?
A.Object class is the super class for all class.

What is difference between path and classpath variables?
A. Difference between PATH and CLASSPATH is that  PATH is an environment variable
which is used to locate JDK binaries like "java" or "javac" command used to run
java program and compile java source file. On the other hand, CLASSPATH, an
environment variable is used by System or Application ClassLoader to locate and
load compile Java bytecodes stored in the .class file.

What is the difference between an Interface and Abstract class?
A. Abstract class is a class that contains one or more abstract methods,
and therefore can never be instantiated. Abstract classes are defined so
that other classes can extend them and make them concrete by implementing
the abstract methods. An interface in the Java programming language is an
abstract type that is used to specify a behaviour that classes must implement.
Interfaces are declared using the interface keyword, and may only contain method
signature and constant declarations.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. No, we can not create object in Interface and Abstract class. Interface
contains methods to be implemented, in abstract class we can implement some
of them and can create more new methods as required keeping at least one abstract method.
later abstract class can be extended and create and concrete class where there will be no abstract methods.

what is Access Specifier?
A. Is to determine the visibility of methods and variables.

What is OOP ? Define each feature of java OOP.
A. Object oriented program, Features of java OOP contains:

1 - Encapsulation = Encapsulating data can only be accessed by public methods.
    There are various way to hide the data. By making a method, variable private
    access limits to the class user. By using getter and setter method private
    data can be accessed, hiding implementation of methods and data from user is
    called encapsulation. from the users. It improves maintainability and
    flexibility and re-usability. The fields can be made read-only User would not
    be knowing what is going on behind the scene. They would only be knowing that
    to update a field call set method and to read a field call get method but what
    these set and get methods are doing is purely hidden from them.

2 - Inheritance: Inheritance refers to a feature of Java programming that lets you
    create classes that are derived from other classes. A class that's based on
    another class inherits the other class. The class that is inherited is the parent
    class, the base class, or the superclass

3 - Polymorphism: Polymorphism is the ability of an object to take on many forms.
    The most common use of polymorphism in OOP occurs when a parent class reference
    is used to refer to a child class object. Any Java object that can pass more
    than one IS-A test is considered to be polymorphic. Polymorphism in Java has two types:
      a. Compile time polymorphism (static binding):It happens during compile time.
       Example: Method overloading is an example of static polymorphism,
      b. Runtime polymorphism (dynamic binding): It happens during run time.
       Example: Method overriding is an example of dynamic polymorphism.

4 - Abstraction: Abstraction in Java or Object oriented programming is a way to segregate
    implementation from an interface and one of the five fundamentals along with Encapsulation,
    Inheritance, Polymorphism, Class, and Object. Abstraction in Java is achieved by  using
    interface and abstract class in Java. An interface or abstract class is something which is
    not concrete , something which is incomplete. In order to use interface or abstract class, we need
    to extend and implement an abstract method with concrete behavior.

What is Java Package and which package is imported by default?
A. Java package is a group of similar types of classes, interfaces and sub-packages.
The java.lang package is always imported by default.

What is API? Name list of API that you have used so far.
A. Application program interface (API) is a set of routines, protocols, and tools for building software applications.
Basically, an API specifies how software components should interact. Additionally, APIs are used when programming
graphical user interface (GUI) components. A good API makes it easier to develop a program by providing all the
building blocks. A programmer then puts the blocks together.
i have used java.* package, org.selenium.

Does java support multiple inheritance, explain why or why not?
A. Java does not support multiple inheritance. To reduce the complexity and simplify the language, multiple inheritance
is not supported in java.

What is method overloading and when it happens?
A. If a class has multiple methods having same name but different in parameters, it is known as Method Overloading.
it happens in compile time.

Explain exceptions in java and how to handle it.
A. Exception is an abnormal condition.
In Java, an exception is an event that disrupts the normal flow of the program. It is an object which is thrown at runtime.

What is static keyword in java? How it has been used in variables and methods ?
A. The he static keyword denotes that a member variable, or method, can be accessed without requiring
an instantiation of the class to which it belongswhen static key word is used with a method that method can
be called without creating a object.

What is final and how it has been used variables and methods?
A. A final class cannot be subclassed. A final variable can only be initialized once. A final method cannot be overridden
by subclasses.

What is final, finally and finalize?
A. Final:
1 - Final variables are nothing but constants. We cannot change the value of a final variable once it is initialized. A
    final method cannot be overridden. Which means even though a sub class can call the final method of parent class
    without any issues but it cannot override it.

2 - Finally:
    Finally key word used to execute finally block when the try and catch block exits which ensures that the finally
    block is executed even if an unexpected exception occurs.

3 - Finalize():
    Called by the garbage collector on an object when garbage collection determines that there are no more references to
    the object.

What is a constructor ?
A. Constructor is being used to instantiate a object by using new operator. It is an instance method with the same name
of their class.

Can we have multiple constructors in a class?
A. Yes we can have multiple constructor in class but when we create a parameterized constructor, we need to use default
constructor.

If we don't have a constructor declared, what is called during the object creation?
A. When we do no have construct declared and we crate a object the constructor is called default constructor.

What is "this" keyword in java ?
A. This key word represents instance of the class. this can be used to access class methods and variables.

What is "super" keyword in java? How many possible way can you use?
A. Super key word used for accessing the members of the super class by the extended class.

What is JVM stand for ?
A. JAVA virtual machine.

Is JVM platform independent?
A. JVM is a independent platform

What version of java are you using?
A.java version "1.8.0_301"
  Java(TM) SE Runtime Environment (build 1.8.0_301-b09)
  Java HotSpot(TM) 64-Bit Server VM (build 25.301-b09, mixed mode)

What is JAR stand for ?
A. Java Archives

What is the difference between JDK and JVM?
A. JDK is an acronym for Java Development Kit. The Java Development Kit (JDK) is a software development environment
which is used to develop Java applications and applets. It physically exists. It contains JRE + development tools.
JVM (Java Virtual Machine) is an abstract machine. It is called a virtual machine because it doesn't physically exist.
It is a specification that provides a runtime environment in which Java bytecode can be executed. It can also run those
programs which are written in other languages and compiled to Java bytecode.

What is the difference between JVM and JRE?
A. JVM (Java Virtual Machine) is an abstract machine. It is called a virtual machine because it doesn't physically exist.
It is a specification that provides a runtime environment in which Java bytecode can be executed. It can also run those
programs which are written in other languages and compiled to Java bytecode.
JRE is an acronym for Java Runtime Environment. It is also written as Java RTE. The Java Runtime Environment is a set
of software tools which are used for developing Java applications. It is used to provide the runtime environment.
It is the implementation of JVM. It physically exists. It contains a set of libraries + other files that JVM uses at runtime.

What is compile time and run time?
A. The source code must be compiled into machine code in order to become and executable program. This compilation process
is referred to as compile time.

What is heap?
A. The heap is the run-time data area from which memory for all class instances and arrays is allocated. Heap is the place
where all objects stays during run time. It is part of RAM.

How java manage it's memory?
A. Java manages its memory by the JVM. The JVM loads the code verifies the code, executes the code manages memory
this includes allocating memory from the Operating System.

What is the difference between String, StringBuffer and StringBuilder?
A. String is immutable, if you try to alter their values, another object getscreated, whereas
StringBuffer and StringBuilder are mutable so they can change their values.StringBuffer methods are synchronized while
StringBuilder methods are non-synchronized, it means that for thread-safe operations
you must choose StringBuffer class instead of StringBuilder.

What is Singleton class?
A. The purpose of singleton is to control object creation by keeping private constructor. Singleton pattern helps us to
keep only one instance of a class at any time.We can make constructor as private.
So that user can not create an object from outside of the class.

What is Serialization and Deserialization?
A. Serialization: It is a process of converting an object into a sequence of bytes which can be persisted to a disk or
database or can be sent through streams. Deserialization: The reverse process of creating object from sequence
of bytes is called deserialization.

when to use transient variable in java?
A. If we want to serialize some object that has a field of that type, then we'll have to mark those fields as transient.

Difference between while and do..while loop?
A. In do...while loop, what ever the condition for loop is system will execute the do statement first and then will execute
the while condition. in while loop java will execute the only while condition accordingly.

What is Enum?
A. Enum in java is a data type that contains fixed set of constants.

What is Iterator?
A. An iterator is an interface that is used in place of Enumerations in the Java Collection Framework

Which one will take more memory, an int or Integer?
A. Integer will take more memory.

Why is String Immutable in Java?
A.String is Immutable because can not be modified.

What is constructor chaining in Java?
A.Calling another constructor in the same class from another constructor is called constructor chaining.
By using this() we can call another constructor in the same class.

The difference between Serial and Parallel Garbage Collector?
A.The serial collector uses a single thread to perform all garbage collection work, which is more efficient
because of no communication overhead between threads. It is best suited to single processor machines.

What is JIT stands for?
A.The Just-In-Time (JIT) compiler is a component of the Java™ Runtime Environment that improves the performance of Java
applications at run time. The JIT compiler helps improve the performance of Java programs by compiling bytecodes into native machine
code at run time. The JIT compiler is enabled by default, and is activated when a Java method is called.

Explain Java Heap space and Garbage collection?
A.At run-time the Java instances are stored in the heap memory area. When an object is not referenced
anymore it becomes eligible for removal from heap memory.During garbage collection process, those objects are removed
from heap memory and the space is reclaimed.
Heap memory has three major areas
   1. Young Generation
      a. Eden Space (any instance enters the runtime memory area through eden)
      b. S0 Survivor Space (older instances moved from eden to S0)
      c. S1 Survivor Space (older instances moved from S0 to S1)
   2. Old Generation (instances promoted from S1 to tenured)
   3. Permanent Generation (contains meta information like class, method detail)

Garbage Connection:Java garbage collection is an automatic process to manage the runtime memory used by programs.
Garbage connection of JAVA application is done by Garbage collector.
A garbage collector performs automatic dynamic memory management through the following operations:
 1. It allocates from and gives back memory to the operating system.
 2. Allocate memory to the application as it requests it.
 3. Determines which parts of that memory is still in use by the application.
 4. Reclaims the unused memory for reuse by the application.
An object is considered garbage and its memory can be reused by the VM when it can no longer be reached
from any reference of any other live object in the running program.

Can you guarantee the garbage collection process?
A.No, it is not guaranteed process. Reason: Being an automatic process, programmers need not initiate the garbage
collection process explicitly in the code. System.gc() and Runtime.gc() are hooks to request the JVM to initiate
the garbage collection process.

What is the difference between stack and heap in Java?
A.Heap and Stack are part of JVM but they are used for different purposes.
     Differences are as follows:
  1. Size: Heap space in Java is much bigger than the Stack memory.
  2. Resizing: JVM allows to resize both heap and stack, but need to use different JVM flags for that.
  3. Usage: Heap memory is used to store objects, no mater where u created that object. Stack memory is used to
    store primitive variables and reference variables, method frames and call stack.
  4. Visibility: Heap memory is shared by all threads hence it is also known as the main memory but stack memory
     is local to threads and local variable created there was not visible to others.
  5. Order: Heap is a large memory area where objects can be created and stored in any order but Stack memory
     is structured as Stack data structure i.e. LIFO where method calls are stored as last in first out order.
  6. Error Type: When heap and stack memory are filled different error are being generated.

What is reflection in java and why is it useful?
A. Java Reflection is a process of examining or modifying the run time behavior of a class at run time.
The Reflection API is mainly used in:
IDE (Integrated Development Environment) e.g. Eclipse, MyEclipse, NetBeans etc.
Debugger
Test Tools etc.

what is multithreading in java?
A. Multithreading in java is a process of executing multiple threads simultaneously.
A thread is a lightweight sub-process, the smallest unit of processing. Multiprocessing and multithreading, both are
used to achieve multitasking.

What is the use of synchronization in Java?
A. Synchronization in java is the capability to control the access of multiple threads to any shared resource.
Java Synchronization is better option where we want to allow only one thread to access the shared resource.

What is Framework?
A. A framework, or software framework, is a platform for developing software applications. It provides a foundation on which
software developers can build programs for a specific platform. For example, a framework may include predefined classes
and functions that can be used to process input, manage hardware devices, and interact with system software.

What are the testing Framework available in java?
A. testNG and jUnit

Difference between jUnit and testNG?
A.TestNG is a testing framework inspired from JUnit and NUnit but introducing some new functionalities that make it more
powerful and easier to use.
TestNG is designed to cover all categories of tests: unit, functional, end-to-end, integration, etc...

What are the dependencies for this project?
A. Dependencies for this project are:
1 - gson-2.6.2.jar
2 - java-jason.jar
3 - javax.jason.jar
4 - mongo-java-driver-3.4.0.jar
5 - mysql-connector-java-8.0.13.jar
6 - testng-6.8.7.jar

what is dependency injection in java?
A. Dependency injection is a concept valid for any programming language. The general concept behind dependency injection
is called Inversion of Control. According to this concept a class should not configure its dependencies statically but
should be configured from the outside.

What is static binding and dynamic binding?
A. Connecting a method call to the method body is known as binding.
There are two types of binding
Static Binding (also known as Early Binding).
Dynamic Binding (also known as Late Binding).








